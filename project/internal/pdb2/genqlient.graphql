query getProjects {
	projects {
		number,
		title,
		owner {
			username
			displayName
			email
		},
		status,
		start,
		end
	}
}

query getProject($number: ID!) {
    project(id: $number) {
		number,
		title,
		owner {
			username
			displayName
			email
		},
		status,
		start,
		end
    }
}

query getProjectQuota($number: ID!) {
	project(id: $number) {
		overrulingQuotaGiB
		storage {
			quotaGiB
			usageMiB
		}
	}
}

query getUsers() {
	users() {
		username,
		firstName,
		middleName,
		lastName,
		email,
		status,
		function,
	}
}

# Issue: the generated GO code doesn't handle the filter very well.
#        For instance, it assumes that the `DateTimeFilter` supports `"null"`
#        field if it not used in the filter.  For this reason, we need to
#        create the filter explicitly in the query.
query getUserByEmail($email: String) {
	users(filterBy: {
		email: { equals: $email}
	}) {
		username,
		firstName,
		middleName,
		lastName,
		email,
		status,
		function,
	}
}

query getUser($username: ID!) {
	user(id: $username) {
		username,
		firstName,
		middleName,
		lastName,
		email,
		status,
		function,
	}
}

query getLabs {
	labs {
		id,
		name,
		bookable,
		modalities {
			id,
			name,
			shortName
		}
	}
}

query getBookingEvents($start: DateTime, $end: DateTime, $resources: [ID!]) {
	bookingEvents(filterBy: {
		bookableResource: { id: { in: $resources} },
		start: { after: $start },
		end: { before: $end }
	}) {
		start,
		end,
		status,
		subject,
		session,
		booking {
			experiment {
				modality {
					id
					name
					shortName
				}
			}
			project {
				number
				title
				fundingSource {
					number
				}
				owner {
					username
					groups {
						group {
							id
							name
						}
						primary
					}
				}
			}
			owner {
				username
				firstName
				middleName
				lastName
				email
				status
				function
			}
		}
		resource {
			... on Lab {
				id
				name
			}
			... on Room {
				id
				number
			}
		}
	}
}
